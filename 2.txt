using System;
using System.Collections.Generic;
using System.IO;

public class Participant
{
    public string Name;
    public double[] Scores;
    public int TotalPlace;

    public Participant(string name, double[] scores)
    {
        Name = name;
        Scores = scores;
        TotalPlace = 0;
    }
}

public struct CompetitionResult
{
    public string ParticipantName;
    public int FinalPlace;
    public int TotalScore;

    public override string ToString() => $"{FinalPlace}. {ParticipantName} (Сумма мест: {TotalScore})";
}

class Program
{
    struct JudgeEvaluation
    {
        public int JudgeId;
        public double Score;
        public string ParticipantName;

        public override string ToString() => $"Судья {JudgeId}: {Score} ({ParticipantName})";
    }

    static void Main()
    {
        Console.WriteLine("Введите путь к файлу с данными участников:");
        string filePath = Console.ReadLine();

        // Чтение данных из файла
        List<Participant> participants = new List<Participant>();
        try
        {
            string[] lines = File.ReadAllLines(filePath);
            
            foreach (string line in lines)
            {
                // Пропускаем пустые строки
                if (string.IsNullOrWhiteSpace(line)) continue;
                
                string[] parts = line.Split(':');
                if (parts.Length != 2)
                {
                    Console.WriteLine($"Ошибка формата в строке: {line}");
                    continue;
                }

                string name = parts[0].Trim();
                string[] scoresStr = parts[1].Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);

                if (scoresStr.Length != 7)
                {
                    Console.WriteLine($"Ошибка: у участника {name} должно быть ровно 7 оценок (найдено {scoresStr.Length})");
                    continue;
                }

                double[] scores = new double[7];
                bool valid = true;
                for (int i = 0; i < 7; i++)
                {
                    if (!double.TryParse(scoresStr[i].Trim(), out scores[i]))
                    {
                        Console.WriteLine($"Ошибка: неверный формат оценки у участника {name} - '{scoresStr[i].Trim()}'");
                        valid = false;
                        break;
                    }
                }

                if (valid)
                {
                    participants.Add(new Participant(name, scores));
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при чтении файла: {ex.Message}");
            return;
        }

        if (participants.Count == 0)
        {
            Console.WriteLine("Нет участников для обработки.");
            return;
        }

        // Вывод всех оценок судей
        Console.WriteLine("\nВсе оценки судей:");
        var allScores = new List<JudgeEvaluation>();
        for (int judgeId = 0; judgeId < 7; judgeId++)
        {
            foreach (var p in participants)
            {
                allScores.Add(new JudgeEvaluation
                {
                    JudgeId = judgeId + 1,
                    Score = p.Scores[judgeId],
                    ParticipantName = p.Name
                });
            }
        }
        foreach (var score in allScores)
        {
            Console.WriteLine(score);
        }
        Console.WriteLine();

        // Расчёт мест у каждого судьи
        for (int judge = 0; judge < 7; judge++)
        {
            for (int i = 0; i < participants.Count; i++)
            {
                int place = 1;
                for (int j = 0; j < participants.Count; j++)
                {
                    if (participants[j].Scores[judge] > participants[i].Scores[judge])
                        place++;
                }
                participants[i].TotalPlace += place;
            }
        }

        // Сортировка участников по сумме мест
        for (int i = 0; i < participants.Count; i++)
        {
            for (int j = 0; j < participants.Count - 1; j++)
            {
                if (participants[j].TotalPlace > participants[j + 1].TotalPlace)
                {
                    Participant temp = participants[j];
                    participants[j] = participants[j + 1];
                    participants[j + 1] = temp;
                }
            }
        }

        // Формирование и вывод результатов
        var results = new List<CompetitionResult>();
        for (int i = 0; i < participants.Count; i++)
        {
            results.Add(new CompetitionResult
            {
                ParticipantName = participants[i].Name,
                FinalPlace = i + 1,
                TotalScore = participants[i].TotalPlace
            });
        }

        Console.WriteLine("Итоговые результаты:");
        foreach (var res in results)
        {
            Console.WriteLine(res);
        }
    }
}